{"version":3,"file":"service.min.js","sources":["../src/service.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Open Educational Resources Plugin\n *\n * @author     Christian Ortner <christian.ortner@tugraz.at>\n * @copyright  2022 Educational Technologies, Graz, University of Technology\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as Ajax from 'core/ajax';\n\n/**\n * Load all file informations from backend with ajax service.\n *\n * @returns {*}\n */\nexport const loadFiles = () => {\n    let courseid = document.getElementById(\"local_oer_files_main_area\").dataset.courseid;\n    return Ajax.call([\n        {\n            methodname: 'local_oer_get_files',\n            args: {courseid: courseid}\n        },\n    ]);\n};\n\n/**\n * Load a informations from a single file from backend.\n *\n * @param {string} contenthash\n * @returns {*}\n */\nexport const loadFile = (contenthash) => {\n    let courseid = document.getElementById(\"local_oer_files_main_area\").dataset.courseid;\n    return Ajax.call([\n        {\n            methodname: 'local_oer_get_file',\n            args: {courseid: courseid, contenthash: contenthash}\n        },\n    ]);\n};"],"names":["_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","Ajax","obj","__esModule","_typeof","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","_exports","loadFiles","courseid","document","getElementById","dataset","methodname","args","loadFile","contenthash"],"mappings":"sVAuBkC,SAAAA,yBAAAC,aAAA,GAAA,mBAAAC,QAAA,OAAA,KAAA,IAAAC,kBAAAD,IAAAA,QAAAE,iBAAAF,IAAAA,eAAAF,yBAAA,SAAAC,aAAAA,OAAAA,YAAAG,iBAAAD,iBAAA,GAAAF,YAAA,qGAAlCI,KAAkC,SAAAC,IAAAL,aAAAA,IAAAA,aAAAK,KAAAA,IAAAC,kBAAAD,IAAA,GAAA,OAAAA,KAAA,WAAAE,QAAAF,MAAA,mBAAAA,IAAA,MAAA,CAAAG,QAAAH,KAAA,IAAAI,MAAAV,yBAAAC,aAAAS,GAAAA,OAAAA,MAAAC,IAAAL,KAAAI,OAAAA,MAAAE,IAAAN,SAAAO,OAAA,CAAA,EAAAC,sBAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,IAAA,IAAAC,OAAAZ,IAAA,GAAAS,YAAAG,KAAAH,OAAAI,UAAAC,eAAAC,KAAAf,IAAAY,KAAAI,CAAAA,IAAAA,KAAAR,sBAAAC,OAAAE,yBAAAX,IAAAY,KAAA,KAAAI,OAAAA,KAAAV,KAAAU,KAAAC,KAAAR,OAAAC,eAAAH,OAAAK,IAAAI,MAAAT,OAAAK,KAAAZ,IAAAY,IAAA,CAAAL,OAAAJ,QAAAH,IAAAI,OAAAA,MAAAa,IAAAjB,IAAAO,eAAAA,MAAA;;;;;;;KAAlCW,CAAAnB,MAeEoB,SAAAC,UARuB,WACrB,IAAIC,SAAWC,SAASC,eAAe,6BAA6BC,QAAQH,SAC5E,OAAOtB,KAAKgB,KAAK,CACb,CACIU,WAAY,sBACZC,KAAM,CAACL,SAAUA,cAmB3BF,SAAAQ,SARsB,SAACC,aACrB,IAAIP,SAAWC,SAASC,eAAe,6BAA6BC,QAAQH,SAC5E,OAAOtB,KAAKgB,KAAK,CACb,CACIU,WAAY,qBACZC,KAAM,CAACL,SAAUA,SAAUO,YAAaA,gBAGlD"}