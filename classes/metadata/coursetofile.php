<?php
// This file is part of Moodle - http://moodle.org/
//
// Moodle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Moodle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.

/**
 * Open Educational Resources Plugin
 *
 * @package    local_oer
 * @author     Christian Ortner <christian.ortner@tugraz.at>
 * @copyright  2022 Educational Technologies, Graz, University of Technology
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */

namespace local_oer\metadata;

use local_oer\helper\filestate;

/**
 * Class coursetofile
 *
 * This class is part of the issue https://github.com/llttugraz/moodle-local_oer/issues/14
 *
 * When a file is used multiple times in a course, the editing course can add the course metadata
 * of other courses the edited file.
 */
class coursetofile {
    /**
     * State to overwrite course metadata entries for a given file.
     * Disabled: Course metadata will not be added to file.
     */
    const COURSETOFILE_DISABLED = "0";

    /**
     * State to overwrite course metadata entries for a given file.
     * Enabled: Course metadata will be added to file.
     */
    const COURSETOFILE_ENABLED = "1";

    /**
     * Return a list of all courses this file can have metadata from.
     * This function extends the information in the courselist generated by filestate::calculate_file_state()
     *
     * Course metadata can be included from different sources. External sources are also possible with the courseinfo
     * subplugin type.
     *
     * When a file is used in multiple courses, the collection of course metadata from the additional courses will be included.
     *
     * Example:
     * File is used in course A and course B. Course A edits the file. There is an external mapping C in course A and mapping D in
     * course B.
     * This function will return a list containing course A, B, C and D.
     *
     * @param string $contenthash Moodle file content hash.
     * @param int    $courseid    Moodle courseid where this function is called.
     * @param array  $courses     Courses array generated by filestate class.
     * @return array
     * @throws \coding_exception
     * @throws \dml_exception
     */
    public static function get_courses_metadata_for_file(string $contenthash, int $courseid, array $courses = []): array {
        global $DB;
        if (empty($courses)) {
            list(, , $courses, $writable) = filestate::calculate_file_state($contenthash, $courseid);
        }
        $overwrites  = $DB->get_records('local_oer_coursetofile', ['contenthash' => $contenthash]);
        $owformatted = [];
        foreach ($overwrites as $ow) {
            $owformatted[$ow->courseid . $ow->coursecode] = $ow->state;
        }
        $metadata = new courseinfo();
        foreach ($courses as $key => $course) {
            $data            = $metadata->load_metadata_from_database($course['id']);
            $currentcourse   = $courseid == $course['id'];
            $reducedmetadata = [];
            foreach ($data as $content) {
                $reduced           = [
                        'parent'     => $course['id'],
                        'coursecode' => $content->coursecode,
                        'state'      => (int) ($currentcourse && !$content->ignored),
                        'metadata'   => [
                                'coursename'   => format_string($content->coursename),
                                'structure'    => $content->structure,
                                'description'  => $content->description,
                                'objectives'   => $content->objectives,
                                'organisation' => $content->organisation,
                                'language'     => $content->language,
                                'lecturer'     => $content->lecturer,
                        ],
                ];
                $reduced['state']  = $owformatted[$course['id'] . $content->coursecode] ?? $reduced['state'];
                $reducedmetadata[] = $reduced;
            }
            $courses[$key]['courseinfo'] = $reducedmetadata;
        }

        return $courses;
    }
}
